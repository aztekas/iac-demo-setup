# This file was autogenerated by the BETA 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '$${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/from-1.5/variables#type-constraints for more info.
# "timestamp" template function replacement
locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/from-1.5/blocks/source
source "azure-arm" "centos-nomad" {
  azure_tags = {
    dept = ""
    task = ""
  }
  client_id                         = "${client_id}"
  client_secret                     = "${client_secret}"
  location                          = "${location}"
  managed_image_name                = "${managed_image_name}"
  managed_image_resource_group_name = "${managed_image_resource_group_name}"
  os_type                           = "Linux"
  subscription_id                   = "${subscription_id}"
  tenant_id                         = "${tenant_id}"
  vm_size                           = "Standard_D2s_v3"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/from-1.5/blocks/build
build {
  sources = ["source.azure-arm.autogenerated_1"]
  # could not parse template for following block: "template: hcl2_upgrade:2:33: executing \"hcl2_upgrade\" at <.Path>: can't evaluate field Path in type struct { HTTPIP string; HTTPPort string }"
  provisioner "file" {
    source = "packer/10-growpart.cfg"
    destination = "/tmp/10-growpart.cfg"
  }
  provisioner "shell" {
    execute_command = "chmod +x {{ .Path }}; {{ .Vars }} sudo -E sh '{{ .Path }}'"
    inline          = [
      "yum update -y",
      "yum -y install cloud-init cloud-utils cloud-utils-growpart",
      "mv /tmp/10-growpart.cfg /etc/cloud/cloud.cfg.d/10-growpart.cfg",
      "chown root:root /etc/cloud/cloud.cfg.d/10-growpart.cfg",
      "mkdir -p ~/.ssh/",
      "mv /tmp/private.key ~/.ssh/",
      "chmod 600 ~/.ssh/private.key",
      "systemctl enable cloud-config.service",
      "systemctl enable cloud-final.service",
      "systemctl enable cloud-init-local.service",
      "systemctl enable cloud-init.service",
      "mkdir /etc/nomad.d && cp /tmp/nomad.conf /etc/nomad.d/nomad.conf"
//      "echo \"{{user `ssh_username`}}:$(openssl rand -base64 32)\" | chpasswd",
//      "shred -u /etc/ssh/*_key /etc/ssh/*_key.pub",
//      "dd if=/dev/zero of=/zeros bs=1M",
//      "rm -f /zeros"
    ]
    inline_shebang  = "/bin/sh -x"
  }
}
